// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authorization.proto

/*
Package authorization is a generated protocol buffer package.

It is generated from these files:
	authorization.proto

It has these top-level messages:
	CallistoToken
	AuthInfo
*/
package authorization

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CallistoToken struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *CallistoToken) Reset()                    { *m = CallistoToken{} }
func (m *CallistoToken) String() string            { return proto.CompactTextString(m) }
func (*CallistoToken) ProtoMessage()               {}
func (*CallistoToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CallistoToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthInfo struct {
	Logged bool `protobuf:"varint,1,opt,name=logged" json:"logged,omitempty"`
}

func (m *AuthInfo) Reset()                    { *m = AuthInfo{} }
func (m *AuthInfo) String() string            { return proto.CompactTextString(m) }
func (*AuthInfo) ProtoMessage()               {}
func (*AuthInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthInfo) GetLogged() bool {
	if m != nil {
		return m.Logged
	}
	return false
}

func init() {
	proto.RegisterType((*CallistoToken)(nil), "CallistoToken")
	proto.RegisterType((*AuthInfo)(nil), "AuthInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Authorize service

type AuthorizeClient interface {
	Authorize(ctx context.Context, in *CallistoToken, opts ...grpc.CallOption) (*AuthInfo, error)
}

type authorizeClient struct {
	cc *grpc.ClientConn
}

func NewAuthorizeClient(cc *grpc.ClientConn) AuthorizeClient {
	return &authorizeClient{cc}
}

func (c *authorizeClient) Authorize(ctx context.Context, in *CallistoToken, opts ...grpc.CallOption) (*AuthInfo, error) {
	out := new(AuthInfo)
	err := grpc.Invoke(ctx, "/Authorize/Authorize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Authorize service

type AuthorizeServer interface {
	Authorize(context.Context, *CallistoToken) (*AuthInfo, error)
}

func RegisterAuthorizeServer(s *grpc.Server, srv AuthorizeServer) {
	s.RegisterService(&_Authorize_serviceDesc, srv)
}

func _Authorize_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallistoToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Authorize/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).Authorize(ctx, req.(*CallistoToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authorize_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Authorize",
	HandlerType: (*AuthorizeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _Authorize_Authorize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authorization.proto",
}

func init() { proto.RegisterFile("authorization.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0x2d, 0xc9,
	0xc8, 0x2f, 0xca, 0xac, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57,
	0x52, 0xe5, 0xe2, 0x75, 0x4e, 0xcc, 0xc9, 0xc9, 0x2c, 0x2e, 0xc9, 0x0f, 0xc9, 0xcf, 0x4e, 0xcd,
	0x13, 0x12, 0xe1, 0x62, 0x2d, 0x01, 0x31, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c,
	0x25, 0x25, 0x2e, 0x0e, 0xc7, 0xd2, 0x92, 0x0c, 0xcf, 0xbc, 0xb4, 0x7c, 0x21, 0x31, 0x2e, 0xb6,
	0x9c, 0xfc, 0xf4, 0xf4, 0xd4, 0x14, 0xb0, 0x12, 0x8e, 0x20, 0x28, 0xcf, 0xc8, 0x94, 0x8b, 0xd3,
	0x11, 0x6a, 0x43, 0xaa, 0x90, 0x06, 0x32, 0x87, 0x4f, 0x0f, 0xc5, 0x0e, 0x29, 0x4e, 0x3d, 0x98,
	0x61, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x87, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xee,
	0x80, 0x22, 0x9f, 0x00, 0x00, 0x00,
}
